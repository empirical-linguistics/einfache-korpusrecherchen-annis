library(bookdown)
bookdown::html_book()
bookdown::render_book(output_format = "HTML")
bookdown::render_book("index.Rmd", output_format = "HTML")
getwd()
render_book("index.Rmd")
freq <- read.csv("docs/tables/frequency_analysis.txt")
head(freq, 10)
freq <- read.delim("docs/tables/frequency_analysis.txt", sep = "\t", quote = "")
head(freq, 10)
colnames(freq) <- c("lemma", "count")
head(freq, 10)
head(freq, 20)
head(freq, 20) %>% kable
kableExtra::kable(head(freq, 20))
# compile HTML book
bookdown::render_book("index.Rmd", "bookdown::gitbook")
?kableExtra::scroll_box
# compile HTML book
bookdown::render_book("index.Rmd", "bookdown::gitbook")
# compile HTML book
bookdown::render_book("index.Rmd", "bookdown::gitbook")
# compile HTML book
bookdown::render_book("index.Rmd", "bookdown::gitbook")
# compile HTML book
bookdown::render_book("index.Rmd", "bookdown::gitbook")
# compile HTML book
bookdown::render_book("index.Rmd", "bookdown::gitbook")
?knitr::knknit_engines
?knitr::knit_engines
# compile HTML book
bookdown::render_book("index.Rmd", "bookdown::gitbook")
# compile HTML book
bookdown::render_book("index.Rmd", "bookdown::gitbook")
# compile HTML book
bookdown::render_book("index.Rmd", "bookdown::gitbook")
# compile HTML book
bookdown::render_book("index.Rmd", "bookdown::gitbook")
# compile HTML book
bookdown::render_book("index.Rmd", "bookdown::gitbook")
a <- read.csv("docs/tables/frequency_year.txt", sep = "\t", quote = "")
b <- read.csv("docs/tables/frequency_analysis.txt")
b
b <- read.csv("docs/tables/frequency_analysis.txt", sep = "\t", quote = "")
a
b
b <- read.csv("docs/tables/frequency_dims.txt", sep = "\t", quote = "")
b <- read.csv("docs/tables/frequency.txt", sep = "\t", quote = "")
colnames(a)
colnames(b)
?marge
?merge
merge(a, b, by.x = "meta.date", by.y = "X.2.date")
merge(a, b, by.y = "meta.date", by.x = "X.2.date")
both <- merge(a, b, by.y = "meta.date", by.x = "X.2.date")
head(both, 10)
colnames(both)
both$count.x / both$count.y
both$count.y / both$count.x
(both$count.y / both$count.x) * 1e6
10^6
both$rel <- (both$count.y / both$count.x) * 1e6 #1e6 = 1x10 hoch 6 = 1 Million
both
# absteigend nach relativer Frequenz sortieren
sort(both$rel)
# absteigend nach relativer Frequenz sortieren
sort(both$rel, decreasing = T)
# absteigend nach relativer Frequenz sortieren
both[sort(both$rel, decreasing = T),]
# absteigend nach relativer Frequenz sortieren
both[order(both$rel, decreasing = T),]
order(both$rel)
order(both$rel, decreasing = T)
# absteigend nach relativer Frequenz sortieren
both[order(both$rel, decreasing = T),]
# absteigend nach relativer Frequenz sortieren
both[order(both$rel, decreasing = T),] %>% head
# absteigend nach relativer Frequenz sortieren
both[order(both$rel, decreasing = T),]
# absteigend nach relativer Frequenz sortieren
both <- both[order(both$rel, decreasing = T),]
# compile HTML book
bookdown::render_book("index.Rmd", "bookdown::gitbook")
